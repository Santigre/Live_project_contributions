@model JobPlacementDashboard.Models.JPApplication
<div class="container">
    <div class="col-sm-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>JPApplication</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.JPAppId)

            <div class="form-group" id="inline1">
                @Html.LabelFor(model => model.JPCompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JPCompanyName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JPCompanyName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="inline1">
                @Html.LabelFor(model => model.JPJobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JPJobTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JPJobTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="inline1">
                @Html.LabelFor(model => model.JPJobCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.JPJobCategory, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.JPJobCategory, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="inline1">
                @Html.LabelFor(model => model.JPCompanyCity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JPCompanyCity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JPCompanyCity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="inline1">
                @Html.LabelFor(model => model.JPCompanyState, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.JPCompanyState, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.JPCompanyState, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="inline1">
                @Html.LabelFor(model => model.JPApplicationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JPApplicationDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JPApplicationDate, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Added HeardBack and Interview EditorFor functions*@
            <div class="form-group" id="inline1">
                @Html.LabelFor(model => model.HeardBack, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HeardBack, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HeardBack, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Interview, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Interview, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Interview, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group" id="inline1">
                <div class="col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                    <input type="button" value="Back to List" class="btn btn-default" id="editAppBtnRight" onclick="location.href'@Url.Action("Index", "JPApplications")'" />
                </div>
            </div>
        </div>
        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    document.getElementById("BackToList").onclick = function () {
        window.location.assign("@Url.Action("StudentIndex", "JPApplications")")
    }
</script>